name: Deploy to Oracle VM

on:
  push:
    branches:
      - main
      
jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: 20

    - name: Install dependencies
      run: npm install

    - name: Run unit tests
      run: npm test

    - name: Set up SSH
      run: |
        mkdir -p ~/.ssh
        echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa
        ssh-keyscan -H 160.34.209.175 >> ~/.ssh/known_hosts
    - name: Deploy to Oracle VM and rebuild Docker containers
      run: |
        ssh ubuntu@160.34.209.175 << EOF
          cd pisa-job-application
          git pull origin main
          
          # Detener todos los servicios de docker-compose si existen
          if [ -f docker-compose.yml ]; then
            echo "Stopping docker-compose services..."
            sudo docker-compose down 2>/dev/null || true
          fi
          
          # Liberar puerto 3000 si está ocupado (Next.js)
          PORT=3000
          PID=\$(sudo lsof -t -i:\$PORT)
          if [ -n "\$PID" ]; then
            echo "Killing process using port \$PORT: PID \$PID"
            sudo kill -9 \$PID
            sleep 2
          fi
          
          # Liberar puerto 8000 si está ocupado (FastAPI)
          PORT=8000
          PID=\$(sudo lsof -t -i:\$PORT)
          if [ -n "\$PID" ]; then
            echo "Killing process using port \$PORT: PID \$PID"
            sudo kill -9 \$PID
            sleep 2
          fi
          
          # Eliminar contenedores existentes
          if [ \$(sudo docker ps -a -q -f name=pisa-app) ]; then
            echo "Removing existing pisa-app container..."
            sudo docker rm -f pisa-app
          fi
          if [ \$(sudo docker ps -a -q -f name=fastapi-service) ]; then
            echo "Removing existing fastapi-service container..."
            sudo docker rm -f fastapi-service
          fi
          
          # Eliminar imágenes existentes para forzar rebuild completo
          echo "Removing existing Docker images..."
          sudo docker rmi pisa-fastapi-app 2>/dev/null || true
          sudo docker rmi pisa-job-app 2>/dev/null || true
          
          # Limpiar caché de Docker para asegurar build desde cero
          echo "Cleaning Docker cache..."
          sudo docker builder prune -f 2>/dev/null || true
          
          # Construir y ejecutar FastAPI (sin caché)
          echo "Building FastAPI container from scratch..."
          sudo docker build --no-cache -t pisa-fastapi-app -f Dockerfile.fastapi .
          sudo docker run -d \
            --name fastapi-service \
            -p 8000:8000 \
            pisa-fastapi-app
          
          # Construir y ejecutar Next.js (sin caché)
          echo "Building Next.js container from scratch..."
          sudo docker build --no-cache -t pisa-job-app .
          sudo docker run -d \
            --name pisa-app \
            --env-file .env \
            -p 3000:3000 \
            pisa-job-app
        EOF
